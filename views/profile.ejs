<%- include('partials/header'); -%>

    <div class="dada">
        <label for="myfile" class="chous">
            <!--Here you can choice a file for upload (less than 5 mb)-->
            Выбирите файл для загрузки (не более 5 Mb)
        </label>
        <input type="file" class="my" id="myfile" name="myfile" onchange="fileInputChange(this)"/>
    </div>
    <div class="dada">
        <span id="upload" class="chous">
            <!--Upload the selected file-->
            Загрузить выбранный файл
        </span>
    </div>
    <div class="dada">
        <span id="getList" class="chous">
            <!--Get a list of your files-->
            Список загруженных файлов
        </span>
    </div>
    <div id='promise chous'>
        <!--h2>Your available files</h2-->
        <table class="tables">
            <thead>
                <tr>
                    <td>Имя файла</td>
                    <td>Размер (kb)</td>
                    <td>Тип</td>
                    <td>Время загрузки</td>
                </tr>
            </thead>
            <tbody id="tbody">
            </tbody>
        </table>
    </div>

<%- include('partials/footer'); -%>

<script>
    let fileList = [];
    
    window.onload = async () => {
        try {
            fileList = await getFilesList();
            console.log('----userFileList is:', fileList);
        } catch (err) {
            console.log('===getfileListErr');
        }
    }
    
    
    const getFilesList = async () => {
        try {
            const response = await fetch ('/file/list', {
                method: 'GET'
            });
            const result = await response.json();
            console.log('----getList', result);
            return result.list;
        } catch (err) {
            console.log('---getListerror', err);
        }
    }
    
    function fileInputChange(input) {
        var text = (input.files.length > 0 && input.files[0].size < 1024 * 1024 * 5) 
            ? input.files[0].name 
            : 'Here you can choice a file for upload (less than 5 mb)';
        input.parentNode.getElementsByTagName('label')[0].innerText = text;
        console.log(input.files, input.files[0].size, user );
    }

    document.querySelector('#upload').onclick = async () => {
        const userId = '<%= user._id %>';
        const myInput = document.querySelector('#myfile');
        if (myInput.files[0]) {
            console.log('myInput', 
                        myInput.files[0].name,
                        document.querySelector('#user').innerHTML,
                        userId
                    );
            const formData = new FormData();
            formData.append('user', document.querySelector('#user').innerHTML);
            formData.append('userID', userId);
            formData.append('file', myInput.files[0]);
            const fileExist = fileList.filter(item => item.name === myInput.files[0].name);
            let response;
            console.log('--ifExitst',fileExist);
            try {
                if (fileExist[0]) {
                    response = await fetch ('/file/update/'+ fileExist[0]._id, {
                        method: 'PUT',
                        body: formData,
                    });
                } else {
                    response = await fetch('/file/upload', {
                        method: 'POST',
                        body: formData,
                    });
                }
                //const result = await response.json();
                const result = await response.json();
                fileList = result.list;
                console.log('Успех:', result);
                //console.log('Успех:', JSON.stringify(result));
            } catch (error) {
                console.error('Ошибка:', error);
            }
        }
    }

    document.querySelector('#getList').onclick = async () => {
        let table = document.querySelector('#tbody'),
            row;
        
        const result = await getFilesList();
        console.log('----fileTables:', result);
        table.innerHTML = '';
        result.forEach(item => {
             row = table.insertRow();
             row.id = item._id;
             row.setAttribute('onclick', 'fileInfo(this)');
             row.insertCell().innerHTML = item.name;
             row.insertCell().innerHTML = (item.size / (1024)).toFixed(2);
             row.insertCell().innerHTML = item.mime;
             row.insertCell().innerHTML = item.data;
        });
    }
    
    async function fileInfo(row) {
        const file = fileList.filter(({ _id }) => _id === row.id);
        console.log('----fileInfo',file);
        try {
            response = await fetch ('/file/'+ row.id, {
                method: 'GET',
            });
            const result = await response.json();
            console.log('Успех:', result);
            alert(JSON.stringify(result.fileinfo[0]));
        } catch (error) {
            console.error('Ошибка:', error);
        }
    }
    //getFilesList();

</script>





